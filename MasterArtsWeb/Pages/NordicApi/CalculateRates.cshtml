@page
@model MasterArtsWeb.Pages.CalculateRatesModel
@{
}


<div class="text-center">
    <h3 class="contact adjusted-anchor-2" id="contact-id">
       LCL OCEAN
    </h3>
</div>
<div class="language-toggle text-end index-lang" style="display:none">
    <button id="languageToggleBtn" class="l-btn" onclick="toggleLanguage()">Svenska</button>
</div>
<div class="ban">
    <a href="/LogisticsCenter/ShipmentCalculator#contact-id" class="cta-button">Back</a>
</div>



    <div class="master-master shipping-cost-calculator" style="margin-bottom:10px">


        @if (Model.ApiResponse != null)
        {
            <div class="transit-details">
                <h3 class="section-heading">Rates</h3>
                <div class="rates-table">
                    @foreach (var rate in Model.ApiResponse.Rates)
                    {
                        <div class="table-row">
                            <div class="table-cell">@rate.Currency</div>
                            <div class="table-cell">@rate.Name</div>
                            <div class="table-cell">Sum: @rate.Sum</div>
                        </div>
                    }

                    <div class="table-row">
                        <div class="table-cell">SEK</div>
                        <div class="table-cell">LOCAL SERVICE HANDLING DESTINATION</div>
                        <div class="table-cell">Sum: 3500.00</div>
                    </div>
                </div>
            </div>
        }

        @if (Model.ApiResponse != null)
        {

            <div class="transit-details">
                <h3 class="section-heading">Transit Details</h3>
                <p><strong>Transit Time:</strong> @Model.ApiResponse.TransitTime days</p>
                <p><strong>Vessel:</strong> @Model.ApiResponse.Sailing?.Vessel</p>
                <p><strong>Voyage Number:</strong> @Model.ApiResponse.Sailing?.VoyageNumber</p>
                <p><strong>From:</strong> @Model.ApiResponse.Sailing?.FromDescription (@Model.ApiResponse.Sailing?.FromCode)</p>
                <p><strong>To:</strong> @Model.ApiResponse.Sailing?.ToDescription (@Model.ApiResponse.Sailing?.ToCode)</p>
                <p><strong>Transshipment:</strong> @Model.ApiResponse.Sailing?.TransshipmentDescription (@Model.ApiResponse.Sailing?.TransshipmentCode)</p>
                <p><strong>Gateway:</strong> @Model.ApiResponse.Sailing?.GatewayDescription (@Model.ApiResponse.Sailing?.GatewayCode)</p>
                <p><strong>Closing Date:</strong> @Model.ApiResponse.Sailing?.Closing.ToString("yyyy-MM-dd")</p>
                <p><strong>Estimated Time of Departure:</strong> @Model.ApiResponse.Sailing?.Etd.ToString("yyyy-MM-dd")</p>
                <p><strong>Estimated Time of Arrival:</strong> @Model.ApiResponse.Sailing?.Eta.ToString("yyyy-MM-dd")</p>
                <p><strong>Remarks:</strong> @Model.ApiResponse.Sailing?.Remarks</p>


            </div>

        }

        @if (Model.ApiResponse != null)
        {
            <div class="transit-details">
                <h3 class="section-heading">Agent Details</h3>
                <p><strong>Name:</strong> @Model.ApiResponse.Agent?.Name</p>
                <p><strong>Address:</strong> @Model.ApiResponse.Agent?.Address</p>
                <p><strong>Zip Code:</strong> @Model.ApiResponse.Agent?.ZipCode</p>
                <p><strong>City:</strong> @Model.ApiResponse.Agent?.City</p>
                <p><strong>Country:</strong> @Model.ApiResponse.Agent?.Country</p>

                <p class="emission-item"><strong>CO2 Emissions:</strong> @Model.ApiResponse.Co2.ToString() kg</p>
            </div>
        }

    </div>

    <div class="master-master" style="margin-bottom:150px">





        <h3 id="resultSection" class="result-heading"></h3>

        @{
            decimal sekToAdd = 3500M;
            decimal totalSumSEK = 0M;
            decimal totalSumUSD = 0M;
            decimal totalSumEUR = 0M;
            decimal usdExchangeRate = 0M;
            decimal eurExchangeRate = 0M;
        }

        @if (Model.ApiResponse != null)
        {
            foreach (var total in Model.ApiResponse.Totals)
            {
                decimal sumAsDecimal = (decimal)total.Sum; // Konvertera double till decimal

                if (total.Currency == "SEK")
                {
                    totalSumSEK += sumAsDecimal;
                }
                else if (total.Currency == "USD")
                {
                    totalSumUSD += sumAsDecimal;
                    usdExchangeRate = total.ExchangeRate; // Antag att detta är SEK per USD
                }
                else if (total.Currency == "EUR")
                {
                    totalSumEUR += sumAsDecimal;
                    eurExchangeRate = total.ExchangeRate; // Antag att detta är SEK per EUR
                }
            }

            // Lägg till 3500 SEK till den totala summan i SEK och konvertera till USD och EUR
            totalSumSEK += sekToAdd;
            totalSumUSD += sekToAdd / usdExchangeRate;
            totalSumEUR += sekToAdd / eurExchangeRate;

            <div class="transit-details">
                <h3 class="section-heading">Totals</h3>
                <div class="totals-table">
                    <div class="table-row">
                        <div class="table-cell">SEK</div>
                        <div class="table-cell">@totalSumSEK.ToString("F2")</div>
                        <div class="table-cell"></div> <!-- Tom cell för SEK eftersom det är basvalutan -->
                    </div>
                    <div class="table-row">
                        <div class="table-cell">USD</div>
                        <div class="table-cell">@totalSumUSD.ToString("F2")</div>
                        <div class="table-cell">(SEK 1 = USD @usdExchangeRate.ToString("F4"))</div>
                    </div>
                    <div class="table-row">
                        <div class="table-cell">EUR</div>
                        <div class="table-cell">@totalSumEUR.ToString("F2")</div>
                        <div class="table-cell">(SEK 1 = EUR @eurExchangeRate.ToString("F4"))</div>
                    </div>
                </div>
            </div>





        }
    
       

    
    
    </div>


   





<link rel="stylesheet" href="style.css">


<form method="post" id="contactForm" style="margin-top:200px;">
    <div class="master-qop">
        <div class="form-row">
            <div class="form-col date-field">
                <label asp-for="@Model.ShippingRequest.ImportExport">Import/Export</label>
                <select id="importExportSelect" name="ShippingRequest.ImportExport">
                    <option value="import">Import</option>
                    <option value="export">Export</option>
                   
                </select>
            </div>
            <div class="form-col date-field">
                <label asp-for="@Model.ShippingRequest.Date">Date</label>
                <input asp-for="@Model.ShippingRequest.Date" type="date" />
            </div>
        </div>
    </div>
   
  
   <div class="master-qop">
       <div class="form-row">
            <div class="form-col date-field">
        <label asp-for="@Model.ShippingRequest.FromCity">From</label>
        <input type="text" asp-for="@Model.ShippingRequest.FromCity" id="fromCityInput" class="city-autocomplete" placeholder="City(english)" aria-describedby="fromCodeHelp">

        <input type="hidden" asp-for="@Model.ShippingRequest.FromCode" id="fromCodeInput" class="locode" name="ShippingRequest.FromCode">

        <label asp-for="@Model.ShippingRequest.ToCity">To</label>
        <input type="text" asp-for="@Model.ShippingRequest.ToCity" id="toCityInput" class="city-autocomplete" placeholder="City(english)" aria-describedby="toCodeHelp">

        <input type="hidden" asp-for="@Model.ShippingRequest.ToCode" id="toCodeInput" class="locode" name="ShippingRequest.ToCode">

    </div>
</div>


        </div>
    




    <div class="form-row">
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.Module">Transport Module</label>
            <select asp-for="@Model.ShippingRequest.Module">
                <option value="ocean">Ocean</option>
                
                <!-- Additional options -->
            </select>
        </div>
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.Weight">Weight</label>
            <input asp-for="@Model.ShippingRequest.Weight" type="number" />
        </div>
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.Volume">Volume (m³)</label>
            <input asp-for="@Model.ShippingRequest.Volume" type="number" step="0.01" />
        </div>
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.Packages">Number Of Packages</label>
            <input type="number" asp-for="@Model.ShippingRequest.Packages" />
        </div>
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.PackageType">Package Type</label>
            <select asp-for="@Model.ShippingRequest.PackageType">
                <option value="PALLET(S)">Pall(ar)</option>
                <option value="CARTON(S)">Kartong(er)</option>
                <option value="CRATE(S)">Trälådor</option>
                <option value="DRUM(S)">Fat</option>
                <option value="BUNDLE(S)">Buntar</option>
                <option value="PIECE(S)">Styckegods</option>
                <option value="CONTAINER(S)">Fraktcontainrar</option>
                <option value="ROLL(S)">Rullar</option>
                <option value="BAG(S)">Säckar</option>
            </select>
        </div>
        
    </div>
    
    <!-- Hidden Inputs -->
    <input type="hidden" asp-for="@Model.ShippingRequest.Type" value="lcl" />
    <input type="hidden" asp-for="@Model.ShippingRequest.UserSelection" value="lcl" />



    

       <div style="margin-top:100px">
    <h4>Dimensions</h4>

        <div id="dimensionsContainerEn">
        <div>
            <label asp-for="ShippingRequest.Dimensions[0].Pcs">Number Of Package</label>
            <input asp-for="ShippingRequest.Dimensions[0].Pcs" type="number" />
        </div>
        <div>
            <label asp-for="ShippingRequest.Dimensions[0].Length">Lenght</label>
            <input asp-for="ShippingRequest.Dimensions[0].Length" type="number" />
        </div>
        <div>
            <label asp-for="ShippingRequest.Dimensions[0].Width">Width</label>
            <input asp-for="ShippingRequest.Dimensions[0].Width" type="number" />
        </div>
        <div>
            <label asp-for="ShippingRequest.Dimensions[0].Height">Hight</label>
            <input asp-for="ShippingRequest.Dimensions[0].Height" type="number" />
        </div>
        <div>
            <label asp-for="ShippingRequest.Dimensions[0].Weight">Weight</label>
            <input asp-for="ShippingRequest.Dimensions[0].Weight" type="number" />
        </div>
        <div>
            <label asp-for="ShippingRequest.Dimensions[0].Stackable">Stackable</label>
            <select asp-for="ShippingRequest.Dimensions[0].Stackable">
                <option value="true">Yes</option>
                <option value="false">No</option>
            </select>
        </div>
    </div>

        <button type="button" class="cta-button" onclick="addDimension()">Add Dimension</button>

    <br>
    
    </div>
    <div class="sleep">
    <div id="loadingSpinner" style="display: none;">
        <div class="spinner"></div>
    </div>
    
        <button id="loginButton" onclick="startLoginProcess()" type="submit" class="cta-button text-center" style="margin-top:20px" name="OrderSubmitButton">Calculate</button>
    </div>
    

</form>


<form method="post" id="contactFormSv" style="margin-top:50px;display:none" >
    <div class="form-row">
        <div class="form-col date-field">
            <label asp-for="@Model.ShippingRequest.ImportExport">Import/Export</label>
            <select asp-for="@Model.ShippingRequest.ImportExport">
                <option value="import">Import</option>
                <option value="export">Export</option>
            </select>
        </div>
        <div class="form-row">
        <div class="form-col date-field">
            <label asp-for="@Model.ShippingRequest.InlandZipCode">ZipCode</label>
            <input asp-for="@Model.ShippingRequest.InlandZipCode">
        </div>
        </div>

        <div class="form-col date-field">
            <label asp-for="@Model.ShippingRequest.Date">Datum</label>
            <input asp-for="@Model.ShippingRequest.Date" type="date" />
        </div>
    </div>

    <div class="form-row" style="margin-top:100px">
        <div class="form-col">
            <label for="fromCity">From City</label>
            <input type="text" class="city-autocomplete" placeholder="City(engelska)" aria-describedby="fromCodeHelp">
            <input type="hidden" class="locode" name="ShippingRequest.FromCode">
        </div>
        <div class="form-col">
            <label for="toCity">To City</label>
            <input type="text" class="city-autocomplete" placeholder="City(engelska)" aria-describedby="toCodeHelp">
            <input type="hidden" class="locode" name="ShippingRequest.ToCode">
        </div>
    </div>

    <div class="form-row">
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.Module">Transport Module</label>
            <select asp-for="@Model.ShippingRequest.Module">
                <option value="ocean">Sjö</option>

                <!-- Additional options -->
            </select>
        </div>
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.Weight">Vikt</label>
            <input asp-for="@Model.ShippingRequest.Weight" type="number" />
        </div>
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.Volume">Volym (m³)</label>
            <input asp-for="@Model.ShippingRequest.Volume" type="number" step="0.01" />
        </div>
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.Packages">Antal paket</label>
            <input type="number" asp-for="@Model.ShippingRequest.Packages" />
        </div>
        <div class="form-col">
            <label asp-for="@Model.ShippingRequest.PackageType">Pakettyp</label>
            <select asp-for="@Model.ShippingRequest.PackageType">
                <option value="PALLET(S)">Pall(ar)</option>
                <option value="CARTON(S)">Kartong(er)</option>
                <option value="CRATE(S)">Trälådor</option>
                <option value="DRUM(S)">Fat</option>
                <option value="BUNDLE(S)">Buntar</option>
                <option value="PIECE(S)">Styckegods</option>
                <option value="CONTAINER(S)">Fraktcontainrar</option>
                <option value="ROLL(S)">Rullar</option>
                <option value="BAG(S)">Säckar</option>
            </select>
        </div>

    </div>

    <!-- Hidden Inputs -->
    <input type="hidden" asp-for="@Model.ShippingRequest.Type" value="lcl" />
    <input type="hidden" asp-for="@Model.ShippingRequest.UserSelection" value="lcl" />


    <div>
        <h4>Dimensioner</h4>

        <div id="dimensionsContainerSv">
            <div>
                <label asp-for="ShippingRequest.Dimensions[0].Pcs">Antal stycken</label>
                <input asp-for="ShippingRequest.Dimensions[0].Pcs" type="number" />
            </div>
            <div>
                <label asp-for="ShippingRequest.Dimensions[0].Length">Längd</label>
                <input asp-for="ShippingRequest.Dimensions[0].Length" type="number" />
            </div>
            <div>
                <label asp-for="ShippingRequest.Dimensions[0].Width">Bredd</label>
                <input asp-for="ShippingRequest.Dimensions[0].Width" type="number" />
            </div>
            <div>
                <label asp-for="ShippingRequest.Dimensions[0].Height">Höjd</label>
                <input asp-for="ShippingRequest.Dimensions[0].Height" type="number" />
            </div>
            <div>
                <label asp-for="ShippingRequest.Dimensions[0].Weight">Vikt</label>
                <input asp-for="ShippingRequest.Dimensions[0].Weight" type="number" />
            </div>
            <div>
                <label asp-for="ShippingRequest.Dimensions[0].Stackable">Stackbar</label>
                <select asp-for="ShippingRequest.Dimensions[0].Stackable">
                    <option value="true">Ja</option>
                    <option value="false">Nej</option>
                </select>
            </div>
        </div>


        <button type="button" class="cta-button" onclick="addDimension()">Lägg till Dimension</button>

        <br>

    </div>
   <div class="sleep">
    <div id="loadingSpinner" style="display: none;">
        <div class="spinner"></div>
    </div>
    
        <button id="loginButton" onclick="startLoginProcess()" type="submit" class="cta-button" text-center" style="margin-top:20px" name="OrderSubmitButton">Calculate</button>
    </div>
</form>




@section Scripts {
    <script>
        const locodes = {
            
            
            "GOTHENBURG": "SEGOT",
            "ABIDJAN": "CIABJ",
            "ABU DHABI": "AEAUH",
            "ACCRA": "GHACC",
            "ADELAIDE": "AUADL",
            "ADEN": "YEADE",
            "AHMEDABAD": "INAMD",
            "AKITA": "JPAXT",
            "ALBUQUERQUE, NM": "USABQ",
            "ALEXANDRIA": "EGALY",
            "ALGER": "DZALG",
            "ALTAMIRA": "MXATM",
            "AMMAN": "JOAMM",
            "ANTANANARIVO": "MGTNR",
            "ANTOFAGASTA": "CLANF",
            "AQABA": "JOAQJ",
            "ARICA": "CLARI",
            "ASHDOD": "ILASH",
            "ASUNCION": "PYASU",
            "ATLANTA, GA": "USATL",
            "AUCKLAND": "NZAKL",
            "AUSTIN, TX": "USAUS",
            "BAHRAIN": "BHBAH",
            "BALBOA": "PABLB",
            "BALTIMORE MD": "USBAL",
            "BAMAKO": "MLBKO",
            "BANGALORE": "INBLR",
            "BANGKOK": "THBKK",
            "BANJUL": "GMBJL",
            "BARRANQUILLA": "COBAQ",
            "BASSETERRE": "KNBAS",
            "BATAM (EX BATU BESAR)": "IDBTH",
            "BEIJIAO": "CNBIJ",
            "BEIJING": "CNBJS",
            "BEIRUT": "LBBEY",
            "BELAWAN": "IDBLW",
            "BELIZE CITY": "BZBZE",
            "BINTULU, SARAWAK": "MYBTU",
            "BIRMINGHAM": "USBHM",
            "BLANTYRE": "MWBLZ",
            "BOGOTA": "COBOG",
            "BOSTON, MA": "USBOS",
            "BRIDGETOWN": "BBBGI",
            "BRISBANE": "AUBNE",
            "BROWNSVILLE": "USBRO",
            "BUENAVENTURA": "COBUN",
            "BUENOS AIRES": "ARBUE",
            "BUFFALO NY": "USBUF",
            "BULAWAYO": "ZWBUQ",
            "BUSAN": "KRPUS",
            "CAGAYAN DE ORO": "PHCGY",
            "CAIRO": "EGCAI",
            "CALCUTTA": "INCCU",
            "CALGARY": "CACAL",
            "CALLAO": "PECLL",
            "CAPE TOWN": "ZACPT",
            "CARTAGENA": "COCTG",
            "CASABLANCA": "MACAS",
            "CASTRIES": "LCCAS",
            "CAYENNE": "GFCAY",
            "CEBU": "PHCEB",
            "CHANGSHA": "CNCSH",
            "CHANGSHA HUANGHUA INTERNATIONAL APT": "CNCSX",
            "CHANGZHOU JIANGSU ": "CNCZX",
            "CHARLESTON, SC": "USCHS",
            "CHARLOTTE, NC": "USCLT",
            "CHATTANOOGA": "USCHA",
            "CHENGDU SHUANGLIU INTERNATIONAL APT": "CNCTU",
            "CHENNAI (MADRAS)": "INMAA",
            "CHIBA": "JPCHB",
            "CHICAGO, IL": "USCHI",
            "CHITTAGONG": "BDCGP",
            "CHONGQING": "CNCKG",
            "CINCINNATI, OH": "USCVG",
            "CLEVELAND, OH": "USCLE",
            "COCHIN": "INCOK",
            "COLOMBO": "LKCMB",
            "COLON": "PAONX",
            "COLUMBUS, OH": "USCMH",
            "CONAKRY": "GNCKY",
            "COTONOU": "BJCOO",
            "CRISTOBAL": "PACTB",
            "DADRI": "INDER",
            "DAKAR": "SNDKR",
            "DALIAN": "CNDAL",
            "DALLAS, TX": "USDAL",
            "DAMIETTE": "EGDAM",
            "DAMMAM": "SADMM",
            "DANANG": "VNDAD",
            "DAR ES SALAAM": "TZDAR",
            "DARWIN": "AUDRW",
            "DAVAO, MINDANAO": "PHDVO",
            "DAYTON, OH": "USDAY",
            "DENVER, CO": "USDEN",
            "DES MOINES": "USDSM",
            "DETROIT, MI": "USDET",
            "DJIBOUTI": "DJJIB",
            "DOHA/HAMAD PORT": "QADOH",
            "DONGGUAN PT": "CNDGG",
            "DOUALA": "CMDLA",
            "DOUMEN": "CNDOU",
            "DUBAI": "AEDXB",
            "DURBAN": "ZADUR",
            "EDMONTON": "CAEDM",
            "EL PASO, TX": "USELP",
            "FORT DE FRANCE": "MQFDF",
            "FOSHAN": "CNFOS",
            "FREEPORT": "BSFPO",
            "FREETOWN": "SLFNA",
            "FREMANTLE": "AUFRE",
            "FUJAIRAH (AL-FUJAIRAH)": "AEFJR",
            "FUKUYAMA": "JPFKY",
            "FUZHOU": "CNFOC",
            "GABORONE": "BWGBE",
            "GARHI HARSARU": "INGHR",
            "GEORGETOWN": "GYGEO",
            "GRAND CAYMAN": "KYGEC",
            "GRAND RAPIDS": "USGRR",
            "GREENSBORO": "USGBO",
            "GREENVILLE SC": "USGLH",
            "GUANGZHOU (HUANGPU)": "CNWUC",
            "GUANGZHOU JIAO XIN": "CNJXN",
            "GUATEMALA CITY": "GTGUA",
            "GUAYAQUIL": "ECGYE",
            "HACHINOHE": "JPHHE",
            "HAIFA": "ILHFA",
            "HAIPHONG": "VNHPH",
            "HAKATA": "JPHKT",
            "HALIFAX": "CAHAL",
            "HAMILTON": "BMBDA",
            "HANGZHOU": "CNHAZ",
            "HARARE": "ZWHRE",
            "HEFEI XINQIAO INTERNATIONAL APT": "CNHFE",
            "HIDALGO, TX": "USHID",
            "HIROSHIMA": "JPHIJ",
            "HO CHI MINH, CAT LAI": "VNSGN",
            "HOBART": "AUHBA",
            "HONG KONG": "HKHKG",
            "Honiara": "SBHIR",
            "HOUSTON, TX": "USHOU",
            "HUNTSVILLE": "USHSV",
            "HUZHOU (ZHEJIANG)": "CNHZH",
            "HYDERABAD": "INHYD",
            "IMABARI": "JPIMB",
            "INCHEON": "KRINC",
            "INDIANAPOLIS, IN": "USIND",
            "IQUIQUE": "CLIQQ",
            "ISTANBUL": "TRIST",
            "ITAPOÁ": "BRIOA",
            "IZMIR": "TRIZM",
            "JACKSONVILLE, FL": "USJAX",
            "JAKARTA": "IDJKT",
            "JEBEL ALI": "AEJEA",
            "JEDDAH": "SAJED",
            "JIANGMEN": "CNJMN",
            "JOHANNESBURG": "ZAJNB",
            "KAGOSHIMA": "JPKOJ",
            "KAMPALA": "UGKLA",
            "KANAZAWA": "JPKNZ",
            "KANSAS CITY, MO": "USMKC",
            "KAOHSIUNG": "TWKHH",
            "KARACHI OLD PORT": "PKKHI",
            "KEELUNG": "TWKEL",
            "KINGSTON": "JMKIN",
            "KINGSTOWN": "VCKTN",
            "KINSHASA": "CDFIH",
            "KNOXVILLE": "USTYS",
            "KOBE": "JPUKB",
            "KOTA KINABALU, SABAH": "MYBKI",
            "KRALENDIJK": "BQKRA",
            "KUCHING": "MYKCH",
            "KUMAMOTO": "JPKMJ",
            "KUMASI": "GHKMS",
            "LA GUAIRA": "VELAG",
            "LABUAN": "MYLBH",
            "LAE": "PGLAE",
            "LAEM CHABANG": "THLCH",
            "LAGOS": "NGLOS",
            "LAREDO, TX": "USLRD",
            "LARNACA": "CYLCA",
            "LAS PALMAS": "ESLPA",
            "LAS VEGAS, NV": "USLAS",
            "LAT KRABANG": "THLKR",
            "LAUTOKA": "FJLTK",
            "LIAN HUA SHAN PANYU GUANGDONG": "CNLIH",
            "LIANYUNGANG": "CNLYG",
            "LIBREVILLE": "GALBV",
            "LILONGWE": "MWLLW",
            "LIMASSOL": "CYLMS",
            "LITTLE ROCK": "USLIT",
            "LOME": "TGLFW",
            "LONGONI": "KMLOG",
            "LOS ANGELES, CA": "USLAX",
            "LOUISEVILLE, KY": "USLUI",
            "LUANDA": "AOLAD",
            "LUBUMASHI": "CDFBM",
            "LUDHIANA": "INLUH",
            "LUSAKA": "ZMLUN",
            "LYTTELTON": "NZLYT",
            "MACAU": "MOMFM",
            "MAHE": "SCMAW",
            "MALABO": "GQSSG",
            "MALE": "MVMLE",
            "MANAGUA": "NIMGA",
            "MANAUS": "BRMAO",
            "MANILA": "PHMNL",
            "MANILA SOUTH HARBOUR": "PHMNS",
            "MANZANILLO": "PAMIT",
            "MANZINI (ROAD)": "SZMTS",
            "MAPUTO": "MZMPM",
            "MASERU (ROAD)": "LSMSU",
            "MATADI": "CDMAT",
            "MATSAPHA (ROAD)": "SZMAT",
            "MATSUYAMA": "JPMYJ",
            "MAZATLAN": "MXMZT",
            "MELBOURNE": "AUMEL",
            "MEMPHIS, TN": "USMEM",
            "MEXICO CITY": "MXMEX",
            "MIAMI, FL": "USMIA",
            "MILWAUKEE, WI": "USMKE",
            "MINDELO": "CVMIN",
            "MINNEAPOLIS MN": "USMES",
            "MIZUSHIMA": "JPMIZ",
            "MOBILE, AL": "USMOB",
            "MOJI": "JPMOJ",
            "MOMBASA": "KEMBA",
            "MONCTON": "CAMNT",
            "MONROVIA": "LRMLW",
            "MONTEGO BAY": "JMMBJ",
            "MONTEVIDEO": "UYMVD",
            "MONTREAL": "CAMTR",
            "MUARA": "BNMUA",
            "NAGASAKI": "JPNGS",
            "NAGOYA": "JPNGO",
            "NAHA, OKINAWA": "JPNAH",
            "NAIROBI": "KENBO",
            "NANJING JIANGSU": "CNNKG",
            "NANSHA": "CNNSA",
            "NANTONG": "CNNTG",
            "NAOETSU": "JPNAO",
            "NAPIER": "NZNPE",
            "NASHVILLE TN": "USBNA",
            "NASSAU": "BSNAS",
            "NDOLA": "ZMNLA",
            "NELSON": "NZNSN",
            "NEVIS (VN)": "KNNEV",
            "NEW DELHI PATPARGANJ": "INICD",
            "NEW ORLEANS, LA": "USMSY",
            "NEW YORK, NY": "USNYC",
            "NHAVA SHEVA": "INNSA",
            "NIAMEY": "NENIM",
            "NICOSIA": "CYNIC",
            "NIIGATA": "JPKIJ",
            "NINGBO": "CNNGB",
            "NORFOLK, VA": "USORF",
            "NOUAKCHOTT": "MRNKC",
            "NOUMEA": "NCNOU",
            "NOVO HAMBURGO": "BRQHV",
            "NUKU ALOFA": "TOTBU",
            "OAKLAND, CA": "USOAK",
            "OITA": "JPOIT",
            "OKLAHOMA, CITY": "USOKC",
            "OMAHA": "USOMA",
            "ONNE": "NGONN",
            "ORAN": "DZORN",
            "ORANJESTAD": "AWORJ",
            "ORLANDO, FL": "USORL",
            "OSAKA": "JPOSA",
            "OUAGADOUGOU": "BFOUA",
            "PANAMA CITY": "PAPTY",
            "PAPEETE": "PFPPT",
            "PARAMARIBO": "SRPBM",
            "PARANAGUA": "BRPNG",
            "PASIR GUDANG": "MYPGU",
            "PENANG": "MYPEN",
            "PHILADELPHIA, PA": "USPHL",
            "PHILIPSBURG": "SXPHI",
            "PHNOM PENH": "KHPNH",
            "PHOENIX, AZ": "USPHX",
            "PITTSBURGH, PA": "USPIT",
            "PLYMOUTH": "MSPLY",
            "POINT DES GALATES": "REPDG",
            "POINTE NOIRE": "CGPNR",
            "POINTE-À-PITRE": "GPPTP",
            "PORT AU PRINCE": "HTPAP",
            "PORT ELIZABETH": "ZAPLZ",
            "PORT GENTIL": "GAPOG",
            "PORT KLANG NORTH": "MYPKG",
            "PORT LOUIS": "MUPLU",
            "PORT MORESBY (PORT MOTUKEA)": "PGPOM",
            "PORT OF SPAIN": "TTPOS",
            "PORT SAID": "EGPSD",
            "PORT SUDAN": "SDPZU",
            "PORT VILA": "VUVLI",
            "PORTLAND, OR": "USPDX",
            "PRAIA": "CVRAI",
            "PROVIDENCE": "USPVD",
            "PUERTO CABELLO": "VEPBL",
            "PUERTO DEL ROSARIO": "ESFUE",
            "PUERTO LIMON": "CRLIO",
            "PUERTO QUETZAL": "GTPRQ",
            "QINGDAO": "CNQIN",
            "RALEIGH, NC": "USRAG",
            "RAROTONGA": "CKRAR",
            "RAS AL KHAIMAH": "AERKT",
            "REGINA": "CAREG",
            "REYKJAVIK": "ISREY",
            "RICHMOND, VA": "USRIC",
            "RIO DE JANEIRO": "BRRIO",
            "RIO GRANDE": "BRRIG",
            "RIO HAINA": "DOHAI",
            "RIYADH": "SARUH",
            "ROCHESTER": "USROC",
            "RONGQI": "CNROQ",
            "ROSEAU": "DMRSU",
            "S.TOMAS DE CASTILLO": "VISTT",
            "SAKATA": "JPSKT",
            "SALT LAKE CITY, UT": "USSLC",
            "SAN ANTONIO": "CLSAI",
            "SAN DIEGO, CA": "USSAN",
            "SAN FRANCISCO, CA": "USSFO",
            "SAN JOSE": "CRSJO",
            "SAN JUAN": "PRSJU",
            "SAN PEDRO SULA": "HNSAP",
            "SAN SALVADOR": "SVSAL",
            "SANTA CRUZ (ES)": "ESSCT",
            "SANTIAGO": "CLSCL",
            "SANTO DOMINGO": "DOSDQ",
            "SANTO TOMAS DE CASTILLA": "GTSTC",
            "SANTOS": "BRSSZ",
            "SASKATOON": "CASAK",
            "SAVANNAH, GA": "USSAV",
            "SEATTLE, WA": "USSEA",
            "SEMARANG": "IDSRG",
            "SENDAI, MIYAGI": "JPSDJ",
            "SFAX": "TNSFA",
            "SHANGHAI": "CNSHA",
            "SHARJAH": "AESHJ",
            "SHENZHEN (YANTIAN)": "CNSNZ",
            "SHIMIZU": "JPSMZ",
            "SHIMONOSEKI": "JPSHS",
            "SHUWAIKH, (KUWAIT)": "KWSWK",
            "SIBU, SARAWAK": "MYSBW",
            "SIHANOUKVILLE": "KHKOS",
            "SINGAPORE": "SGSIN",
            "SIXTH OF OCTOBER": "EGXOO",
            "SOHAR": "OMSOH",
            "SOUSSE": "TNSUS",
            "SPRINGFIELD, MO": "USSGF",
            "ST JOHN, NB": "CASJB",
            "ST JOHN, NF": "CASJF",
            "ST. GEORGES": "GDSTG",
            "ST. JOHN'S": "AGSJO",
            "ST. LOUIS, MO": "USSTL",
            "SUBIC (LUZON)": "PHSFS",
            "SURABAYA": "IDSUB",
            "SUVA": "FJSUV",
            "SUZHOU": "CNSZH",
            "SYDNEY": "AUSYD",
            "TAICHUNG": "TWTXG",
            "TAKAMATSU": "JPTAK",
            "TAKORADI": "GHTKD",
            "TAMATAVE": "MGTMM",
            "TAMPA, FL": "USTPA",
            "TEGUCIGALPA": "HNTGU",
            "TEL AVIV": "ILTLV",
            "TEMA": "GHTEM",
            "TIANJIN": "CNTSN",
            "TOKYO": "JPTYO",
            "TOMAKOMAI": "JPTMK",
            "TORONTO": "CATOR",
            "TOYAMA": "JPTOY",
            "TRIPOLI": "LYTIP",
            "TSURUGA": "JPTSG",
            "TUCSON, AZ": "USTUS",
            "TUGHLAKABAD": "INTKD",
            "TULSA": "USTUL",
            "TUNIS": "TNTUN",
            "TUTICORIN": "INTUT",
            "UMM QASR": "IQUQR",
            "VALPARAISO": "CLVAP",
            "VANCOUVER": "CAVAN",
            "VERACRUZ": "MXVER",
            "WALVIS BAY": "NAWVB",
            "WASHINGTON, DC": "USWAS",
            "WELLINGTON": "NZWLG",
            "WICHITA": "USICT",
            "WILLEMSTAD": "CWWIL",
            "WILMINGTON NC": "USILM",
            "WINDHOEK": "NAWDH",
            "WINNIPEG": "CAWNP",
            "WUHAN HUBEI": "CNWUH",
            "WUXI": "CNWUX",
            "WUZHOU GUANGXI": "CNWUZ",
            "XIAMEN": "CNXMN",
            "XIAOLAN": "CNXAO",
            "XINGANG": "CNXIP",
            "XINHUI": "CNXIN",
            "YANGON": "MMRGN",
            "YANGPU PT": "CNYPG",
            "YANTAI": "CNYNT",
            "YIWU": "CNYIU",
            "YOKOHAMA": "JPYOK",
            "ZHAOQING GUANGDONG": "CNZQG",
            "ZHONGSHAN": "CNZSN",
            "ZHUHAI GUANGDONG": "CNZUH",
        };

       

        $(document).ready(function () {
            $('#importExportSelect').change(function () {
                var selectedValue = $(this).val();

                if (selectedValue === 'import') {
                    $('#toCityInput').val('GOTHENBURG');
                    $('#toCodeInput').val('SEGOT');
                    $('#fromCityInput').val('');
                    $('#fromCodeInput').val('');
                } else if (selectedValue === 'export') {
                    $('#fromCityInput').val('GOTHENBURG');
                    $('#fromCodeInput').val('SEGOT');
                    $('#toCityInput').val('');
                    $('#toCodeInput').val('');
                }
            });

            // Initialiserar jQuery UI Autocomplete
            $(".city-autocomplete").autocomplete({
                source: Object.keys(locodes),
                select: function (event, ui) {
                    $(this).next(".locode").val(locodes[ui.item.value]);
                }
            });

            $(".city-autocomplete").blur(function () {
                var value = $(this).val().toUpperCase();
                var matchingLocode = locodes[value];
                if (matchingLocode) {
                    $(this).next(".locode").val(matchingLocode);
                }
            });

            // Utlös change-event manuellt för att sätta standardvärden baserat på förvalt alternativ
            $('#importExportSelect').change();
        });

        // Använd jQuery UI Autocomplete för både från och till städer
        $(function () {
            setUpAutocomplete("fromCity", "fromCode");
            setUpAutocomplete("toCity", "toCode");
        });







        $(document).ready(function () {
            // Iterera över varje p-element inuti din div och lägg till fade-in-klassen med en fördröjning
            $('.shipping-cost-calculator div p').each(function (i) {
                $(this).css('animation-delay', `${i * 0.2}s`); // 0.1s fördröjning mellan varje rad
                $(this).addClass('fade-in');
            });
        });




        function startLoginProcess() {
            document.getElementById('loadingSpinner').style.display = 'block';
            document.getElementById('loadingSpinner2').style.display = 'block';
            // Antag att `login` är funktionen som hanterar inloggningsprocessen.
            login().then(() => {
                document.getElementById('loadingSpinner').style.display = 'none';
            });
        }

        window.onload = function () {
            var resultSection = document.getElementById('resultSection');
            if (resultSection) {
                resultSection.scrollIntoView({ behavior: 'smooth' });
            }
        };

        function toggleLanguage() {
            var toggleBtn = document.getElementById('languageToggleBtn');
            var contactForm = document.getElementById('contactForm');
            var contactFormSv = document.getElementById('contactFormSv');

            if (toggleBtn.innerText === 'Svenska') {
                toggleBtn.innerText = 'English';
                contactForm.style.display = 'none';
                contactFormSv.style.display = 'block';
            } else {
                toggleBtn.innerText = 'Svenska';
                contactForm.style.display = 'block';
                contactFormSv.style.display = 'none';
            }
        }
        var dimensionIndex = 0; // Initialiserar dimensionIndex här

        function addDimension() {
            var language = document.getElementById('languageToggleBtn').innerText;
            var isSwedish = language.includes('Svenska');

            var containerId = isSwedish ? 'dimensionsContainerEn' : 'dimensionsContainerSv';
            var container = document.getElementById(containerId);

            var placeholders = isSwedish ? {
                pcs: "Number of pieces",
                length: "Length",
                width: "Width",
                height: "Height",
                weight: "Weight",
                yes: "Yes",
                no: "No",
                removeBtn: "Remove"
            } : {
                pcs: "Antal stycken",
                length: "Längd",
                width: "Bredd",
                height: "Höjd",
                weight: "Vikt",
                yes: "Ja",
                no: "Nej",
                removeBtn: "Ta bort"
            };

            var dimensionHTML = `
                <div id="dimension-${dimensionIndex}">
                    <input type="number" name="ShippingRequest.Dimensions[${dimensionIndex}].Pcs" placeholder="${placeholders.pcs}" />
                    <input type="number" name="ShippingRequest.Dimensions[${dimensionIndex}].Length" placeholder="${placeholders.length}" />
                    <input type="number" name="ShippingRequest.Dimensions[${dimensionIndex}].Width" placeholder="${placeholders.width}" />
                    <input type="number" name="ShippingRequest.Dimensions[${dimensionIndex}].Height" placeholder="${placeholders.height}" />
                    <input type="number" name="ShippingRequest.Dimensions[${dimensionIndex}].Weight" placeholder="${placeholders.weight}" />
                    <select name="ShippingRequest.Dimensions[${dimensionIndex}].Stackable">
                        <option value="true">${placeholders.yes}</option>
                        <option value="false">${placeholders.no}</option>
                    </select>
                    <button type="button" class="cta-button" onclick="removeDimension(${dimensionIndex})">${placeholders.removeBtn}</button>
                </div>
            `;

            container.insertAdjacentHTML('beforeend', dimensionHTML);
            dimensionIndex++; // Inkrementera dimensionIndex för varje ny dimension
        }





        function removeDimension(index) {
            var elementToRemove = document.getElementById(`dimension-${index}`);
            if (elementToRemove) {
                elementToRemove.remove();
            }
        }




       



    </script>
}